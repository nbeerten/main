name: Build and deploy

on:
  push:
    branches:
      - 'main'

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 
        uses: actions/checkout@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/app/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/main:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/main:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/main:buildcache,mode=max

  Deploy:
    runs-on: ubuntu-latest
    needs: Build
    steps:
    - name: Checkout 
      uses: actions/checkout@v3

    - name: Copy docker folder contents via scp
      uses: appleboy/scp-action@master
      env:
        HOST: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        PORT: ${{ secrets.PORT }}
        KEY: ${{ secrets.SSHKEY }}
      with:
        source: "docker/prod/"
        target: "/home/nbeerten/main"
        strip_components: 2

    - name: Pull image and restart container
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        PORT: ${{ secrets.PORT }}
        KEY: ${{ secrets.SSHKEY }}
        script: >
          cd ~/main && 
          docker compose down -v &&
          docker compose pull app && 
          docker compose up -d

    - name: Migrate and cache config, route and views
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        PORT: ${{ secrets.PORT }}
        KEY: ${{ secrets.SSHKEY }}
        script: >
          cd ~/main && 
          docker compose exec app bash -c 
          'php artisan down && 
          php artisan config:cache && 
          php artisan route:cache && 
          php artisan view:cache && 
          php artisan icons:cache &&
          php artisan up'