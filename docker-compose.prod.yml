networks:
  laravel:

volumes:
    mysql:
        driver: local
    redis:
        driver: local

services:
  nginx:
    build:
      context: ./docker
      dockerfile: nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .:/var/www/html:delegated
      - ./docker/prod/nginx/:/etc/nginx/conf.d/
      - ./docker/prod/ssl/:/etc/ssl/
    depends_on:
      - php
      - redis
      - mysql
    networks:
      - laravel

  mysql:
    image: mysql:latest
    restart: unless-stopped
    tty: true
    ports:
      - "3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - mysql:/var/lib/mysql
    networks:
      - laravel

  php:
    build:
      context: ./docker
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "9000"
    volumes:
      - .:/var/www/html:delegated
      # - ./docker/php/php.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - laravel

  redis:
    image: redis:alpine
    restart: unless-stopped
    ports:
      - "6379"
    volumes:
      - redis:/data
    networks:
      - laravel

  npm:
    image: node:lts-alpine
    volumes:
      - .:/var/www/html
    working_dir: /var/www/html
    entrypoint: [ 'npm' ]
    networks:
      - laravel