version: "3"
services:

  app:
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    image: app
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www/
    volumes:
      - ./:/var/www
      - ./docker/php.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - main
    depends_on:
      - mysql

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx/:/etc/nginx/conf.d/
    networks:
      - main
  
  mysql:
    image: mysql
    container_name: mysql
    ports:
        - "3306:3306"
    restart: unless-stopped
    tty: true
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
    volumes:
      - mysql:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - main
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
      retries: 3
      timeout: 5s

  redis:
    image: redis:alpine
    container_name: redis
    ports:
        - "6379:6379"
    restart: unless-stopped
    tty: true
    volumes:
        - 'redis:/data'
    networks:
        - main
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      retries: 3
      timeout: 5s

networks:
  main:
    driver: bridge

volumes:
    mysql:
        driver: local
    redis:
        driver: local
