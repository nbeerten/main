# FROM php:8.2-fpm

# # Set working directory
# WORKDIR /var/www

# # Install dependencies
# RUN apt-get update && apt-get install -y \
#     build-essential \
#     libpng-dev \
#     libjpeg62-turbo-dev \
#     libfreetype6-dev \
#     locales \
#     zip \
#     jpegoptim optipng pngquant gifsicle \
#     vim \
#     unzip \
#     git \
#     curl \
#     libzip-dev libonig-dev \
#     libmagickwand-dev

# # Clear cache
# RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# # Install PHP extensions
# RUN docker-php-ext-install pdo_mysql mbstring zip exif pcntl bcmath gd
# RUN pecl install redis imagick \
# 	&& docker-php-ext-enable redis imagick

# # Copy composer.lock and composer.json
# COPY composer.lock composer.json /var/www/
# # Install composer
# RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
# # Install composer dependencies
# RUN composer install --no-dev --ansi --no-scripts --no-interaction

# # Copy package.lock
# COPY package.json package-lock.json /var/www/

# # Install Node & NPM
# RUN apt-get update && apt-get install -y \
#     software-properties-common \
#     npm
# RUN npm install npm@latest -g && \
#     npm install n -g && \
#     n latest
# RUN node --version
# RUN npm --version
# # Install NPM dependencies
# RUN npm ci

# # Add user for laravel application
# RUN groupadd -g 1000 www
# RUN useradd -u 1000 -ms /bin/bash -g www www

# # Copy existing application directory contents
# COPY . /var/www

# # Copy existing application directory permissions
# COPY --chown=www:www . /var/www

# # Change current user to www
# USER www

# # Compile CSS, JS, etc.
# RUN npm run build

# # Expose port 9000 and start php-fpm server
# EXPOSE 9000
# CMD ["php-fpm"]
